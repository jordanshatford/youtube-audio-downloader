import type { OptionsLegacyParser } from '@hey-api/client-fetch';
import { createClient, createConfig } from '@hey-api/client-fetch';

import type {
	DeleteDownloadData,
	DeleteDownloadError,
	DeleteDownloadResponse,
	DeleteSessionError,
	DeleteSessionResponse,
	GetDownloadData,
	GetDownloadError,
	GetDownloadFileData,
	GetDownloadFileError,
	GetDownloadFileResponse,
	GetDownloadResponse,
	GetDownloadsError,
	GetDownloadsOptionsError,
	GetDownloadsOptionsResponse,
	GetDownloadsResponse,
	GetNextSearchError,
	GetNextSearchResponse,
	GetSearchData,
	GetSearchError,
	GetSearchResponse,
	GetSessionError,
	GetSessionResponse,
	GetSessionValidateError,
	GetSessionValidateResponse,
	GetVideoData,
	GetVideoError,
	GetVideoResponse,
	PostDownloadsData,
	PostDownloadsError,
	PostDownloadsResponse,
	PutDownloadsData,
	PutDownloadsError,
	PutDownloadsResponse
} from './types.gen';

// This file is auto-generated by @hey-api/openapi-ts

export const client = createClient(createConfig());

/**
 * Get Search
 */
export const getSearch = <ThrowOnError extends boolean = false>(
	options: OptionsLegacyParser<GetSearchData, ThrowOnError>
) => {
	return (options?.client ?? client).get<GetSearchResponse, GetSearchError, ThrowOnError>({
		...options,
		url: '/search'
	});
};

/**
 * Get Next Search
 */
export const getNextSearch = <ThrowOnError extends boolean = false>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<GetNextSearchResponse, GetNextSearchError, ThrowOnError>({
		...options,
		url: '/search/next'
	});
};

/**
 * Get Video
 */
export const getVideo = <ThrowOnError extends boolean = false>(
	options: OptionsLegacyParser<GetVideoData, ThrowOnError>
) => {
	return (options?.client ?? client).get<GetVideoResponse, GetVideoError, ThrowOnError>({
		...options,
		url: '/search/video'
	});
};

/**
 * Get Session
 */
export const getSession = <ThrowOnError extends boolean = false>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<GetSessionResponse, GetSessionError, ThrowOnError>({
		...options,
		url: '/session'
	});
};

/**
 * Delete Session
 */
export const deleteSession = <ThrowOnError extends boolean = false>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).delete<
		DeleteSessionResponse,
		DeleteSessionError,
		ThrowOnError
	>({
		...options,
		url: '/session'
	});
};

/**
 * Get Session Validate
 */
export const getSessionValidate = <ThrowOnError extends boolean = false>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		GetSessionValidateResponse,
		GetSessionValidateError,
		ThrowOnError
	>({
		...options,
		url: '/session/validate'
	});
};

/**
 * Get Downloads
 */
export const getDownloads = <ThrowOnError extends boolean = false>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<GetDownloadsResponse, GetDownloadsError, ThrowOnError>({
		...options,
		url: '/downloads'
	});
};

/**
 * Put Downloads
 */
export const putDownloads = <ThrowOnError extends boolean = false>(
	options: OptionsLegacyParser<PutDownloadsData, ThrowOnError>
) => {
	return (options?.client ?? client).put<PutDownloadsResponse, PutDownloadsError, ThrowOnError>({
		...options,
		url: '/downloads'
	});
};

/**
 * Post Downloads
 */
export const postDownloads = <ThrowOnError extends boolean = false>(
	options: OptionsLegacyParser<PostDownloadsData, ThrowOnError>
) => {
	return (options?.client ?? client).post<PostDownloadsResponse, PostDownloadsError, ThrowOnError>({
		...options,
		url: '/downloads'
	});
};

/**
 * Get Downloads Options
 */
export const getDownloadsOptions = <ThrowOnError extends boolean = false>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		GetDownloadsOptionsResponse,
		GetDownloadsOptionsError,
		ThrowOnError
	>({
		...options,
		url: '/downloads/options'
	});
};

/**
 * Get Download
 */
export const getDownload = <ThrowOnError extends boolean = false>(
	options: OptionsLegacyParser<GetDownloadData, ThrowOnError>
) => {
	return (options?.client ?? client).get<GetDownloadResponse, GetDownloadError, ThrowOnError>({
		...options,
		url: '/downloads/{download_id}'
	});
};

/**
 * Delete Download
 */
export const deleteDownload = <ThrowOnError extends boolean = false>(
	options: OptionsLegacyParser<DeleteDownloadData, ThrowOnError>
) => {
	return (options?.client ?? client).delete<
		DeleteDownloadResponse,
		DeleteDownloadError,
		ThrowOnError
	>({
		...options,
		url: '/downloads/{download_id}'
	});
};

/**
 * Get Download File
 */
export const getDownloadFile = <ThrowOnError extends boolean = false>(
	options: OptionsLegacyParser<GetDownloadFileData, ThrowOnError>
) => {
	return (options?.client ?? client).get<
		GetDownloadFileResponse,
		GetDownloadFileError,
		ThrowOnError
	>({
		...options,
		url: '/downloads/{download_id}/file'
	});
};
